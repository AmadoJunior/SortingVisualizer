{"version":3,"sources":["components/MainContainer/MainContainer.module.css","components/Visualizer/Visualizer.module.css","Assets/bubble.png","Assets/selection.png","Assets/insertion.png","Assets/quick.png","components/Visualizer/VisualizerP5.js","components/MainContainer/MainContainer.js","Tools/randomArrGenerator.js","components/bubbleSort/bubbleSort.js","components/selectionSort/selectionSort.js","components/insertionSort/insertionSort.js","components/quickSort/quickSort.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","VisualizerP5","props","className","styles","container","setup","p5","canvasParentRef","createCanvas","parent","draw","tempArr","data","startingPoint","length","background","stroke","strokeWeight","i","line","height","MainContainer","outer","title","children","implementation","src","list","complexity","best","average","worst","space","btn","onClick","sortHandler","CreateRandomArray","size","range","max","randInt","Math","floor","random","push","BubbleSort","useState","setData","useEffect","randomArrGenerator","swap","arr","index1","index2","temp","sleep","delay","Promise","resolve","setTimeout","a","noSwaps","j","SelectionSort","min","InsertionSort","curVal","QuickSort","tempData","pivot","start","end","swapIndex","left","right","pivotIndex","App","message","setMessage","fetch","then","res","console","log","json","parsedRes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.358783e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"outer\":\"MainContainer_outer__1fWeX\",\"container\":\"MainContainer_container__GIRhl\",\"list\":\"MainContainer_list__2-9Du\",\"btn\":\"MainContainer_btn__2Q9r_\",\"implementation\":\"MainContainer_implementation__3odys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Visualizer_container__ra5dv\",\"btn\":\"Visualizer_btn__3PtRg\"};","module.exports = __webpack_public_path__ + \"static/media/bubble.8b4a6d0a.png\";","module.exports = __webpack_public_path__ + \"static/media/selection.73a40f6e.png\";","module.exports = __webpack_public_path__ + \"static/media/insertion.bb3dca61.png\";","module.exports = __webpack_public_path__ + \"static/media/quick.01b16c1b.png\";","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport styles from \"./Visualizer.module.css\";\n\nfunction VisualizerP5(props){\n\n    const height = 300;\n    const width = 500;\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(width, height).parent(canvasParentRef);\n    }   \n\n    const draw = (p5) => {\n        let tempArr = props.data;\n        const stroke = 2;\n        const color = \"white\";\n        const spacingMultiplier = 4;\n        let startingPoint = (width - (tempArr.length*stroke*(spacingMultiplier/2)))/2;\n        p5.background(0);\n        p5.stroke(color);\n        p5.strokeWeight(stroke);\n\n        for(let i = 0; i < tempArr.length; i++){\n            p5.line(startingPoint+(i*spacingMultiplier), \n            height - tempArr[i], \n            startingPoint+(i*spacingMultiplier), \n            height-2);\n        }\n        \n    }\n\n    return (\n        <div className={styles.container}>\n            <Sketch setup={setup} draw={draw}></Sketch>\n        </div>\n    )\n}\n\nexport default VisualizerP5;","import React from \"react\";\nimport styles from \"./MainContainer.module.css\";\n\nfunction MainContainer(props){\n    return (\n    <div className={styles.outer}>\n        <div className={styles.container}>\n        <h2 className={styles.title}>{props.title}</h2>\n            <div>\n            {\n                props.children\n            }\n            <img className={styles.implementation} src={props.implementation}></img>\n            </div>\n        </div>\n        <div>\n            <ul className={styles.list}>\n                <h3>Time Complexity</h3>\n                <li>Best: {props.complexity.best}</li>\n                <li>Average: {props.complexity.average}</li>\n                <li>Worst: {props.complexity.worst}</li>\n                <h3>Space Complexity</h3>\n                <li>{props.complexity.space}</li>\n            </ul>\n            <button className={styles.btn} onClick={props.sortHandler}>Sort</button>\n        </div>\n    </div>\n    )\n}\n\nexport default MainContainer;","function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\nfunction CreateRandomArray(size, range) {\n    let tempArr = [];\n    for(let i = 0; i < size; i++){\n        let randInt = getRandomInt(range);\n        tempArr.push(randInt);\n    }\n    return tempArr;\n}\n\nexport default CreateRandomArray;","import React, {useState, useEffect} from \"react\";\nimport VisualizerP5 from \"./../Visualizer/VisualizerP5\";\nimport MainContainer from \"./../MainContainer/MainContainer\";\nimport randomArrGenerator from \"./../../Tools/randomArrGenerator\";\nimport implementation from \"./../../Assets/bubble.png\";\n\nfunction BubbleSort(){\n    //State\n    const [data, setData] = useState([]);\n    const [complexity, setComplexity] = useState({\n        best: \"O(N)\",\n        average: \"O(N^2)\",\n        worst: \"O(N^2)\",\n        space: \"O(1)\"\n    });\n\n    //Effects\n    useEffect(() => {\n        let tempArr = randomArrGenerator(120, 250);\n        setData(tempArr);\n    }, [])\n\n    //Tools\n    const swap = (arr, index1, index2) => {\n        let temp = arr[index1];\n        arr[index1] = arr[index2];\n        arr[index2] = temp;\n    }\n\n    const sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n\n    const sortHandler = async() => {\n        let tempArr = [...data];\n        let noSwaps;\n        for(let i = 0; i < tempArr.length; i++){\n            noSwaps = true;\n            for(let j = 0; j < tempArr.length-i; j++){\n                if(tempArr[j] > tempArr[j+1]){\n                    swap(tempArr, j, j+1);\n                    noSwaps = false;  \n                    await sleep(1);\n                    setData(tempArr);\n                }\n            }\n            if(noSwaps){\n                break;\n            }\n        }\n\n    }\n\n    return (\n        <MainContainer\n        title=\"Bubble Sort\"\n        implementation={implementation}\n        complexity={complexity}\n        sortHandler={sortHandler}>\n            <VisualizerP5\n                data={data}\n            />\n       </MainContainer>\n    )\n}\n\nexport default BubbleSort;","import React, {useState, useEffect} from \"react\";\nimport VisualizerP5 from \"./../Visualizer/VisualizerP5\";\nimport MainContainer from \"./../MainContainer/MainContainer\";\nimport implementation from \"./../../Assets/selection.png\";\nimport randomArrGenerator from \"./../../Tools/randomArrGenerator\";\n\nfunction SelectionSort(){\n    //State\n    const [data, setData] = useState([]);\n    const [complexity, setComplexity] = useState({\n        best: \"O(N^2)\",\n        average: \"O(N^2)\",\n        worst: \"O(N^2)\",\n        space: \"O(1)\"\n    });\n\n    //Effects\n    useEffect(() => {\n        let tempArr = randomArrGenerator(120, 250);\n        setData(tempArr);\n    }, [])\n\n    //Tools\n    const swap = (arr, index1, index2) => {\n        let temp = arr[index1];\n        arr[index1] = arr[index2];\n        arr[index2] = temp;\n    }\n\n    const sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n\n    const sortHandler = async() => {\n        let tempArr = [...data];\n        let min = 0;\n        for(let i = 0; i < tempArr.length; i++){\n            for(let j = i+1; j < tempArr.length; j++){\n                if(tempArr[j] <= tempArr[min]){\n                    min = j;\n                }\n            }\n            swap(tempArr, min, i);\n            await sleep(180);\n            setData(tempArr);\n        }\n        setData(tempArr);\n    }\n\n    return (\n        <MainContainer\n        title=\"Selection Sort\"\n        implementation={implementation}\n        complexity={complexity}\n        sortHandler={sortHandler}>\n            <VisualizerP5\n                data={data}\n            />\n       </MainContainer>\n    )\n}\n\nexport default SelectionSort;","import React, {useState, useEffect} from \"react\";\nimport VisualizerP5 from \"./../Visualizer/VisualizerP5\";\nimport MainContainer from \"./../MainContainer/MainContainer\";\nimport randomArrGenerator from \"./../../Tools/randomArrGenerator\";\nimport implementation from \"./../../Assets/insertion.png\";\n\nfunction InsertionSort(){\n    //State\n    const [data, setData] = useState([]);\n    const [complexity, setComplexity] = useState({\n        best: \"O(N)\",\n        average: \"O(N^2)\",\n        worst: \"O(N^2)\",\n        space: \"O(1)\"\n    });\n\n    //Effects\n    useEffect(() => {\n        let tempArr = randomArrGenerator(120, 250);\n        setData(tempArr);\n    }, [])\n\n    const sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n\n    const sortHandler = async() => {\n        let tempArr = [...data];\n    \n        for(let i = 1; i < tempArr.length; i++){\n            let curVal = tempArr[i];\n            for(var j = i-1; j >= 0 && tempArr[j] > curVal; j--){\n                tempArr[j+1] = tempArr[j];\n                await sleep(3);\n                setData(tempArr);\n            }\n            tempArr[j+1] = curVal;\n            await sleep(3);\n            setData(tempArr);\n        }\n    }\n\n    return (\n        <MainContainer\n        title=\"Insertion Sort\"\n        implementation={implementation}\n        complexity={complexity}\n        sortHandler={sortHandler}>\n            <VisualizerP5\n                data={data}\n            />\n       </MainContainer>\n    )\n}\n\nexport default InsertionSort;","import React, {useState, useEffect} from \"react\";\nimport VisualizerP5 from \"./../Visualizer/VisualizerP5\";\nimport MainContainer from \"./../MainContainer/MainContainer\";\nimport randomArrGenerator from \"../../Tools/randomArrGenerator\";\nimport implementation from \"./../../Assets/quick.png\";\n\nfunction QuickSort(){\n    //State\n    const [data, setData] = useState([]);\n    let tempData = [...data];\n    const [complexity, setComplexity] = useState({\n        best: \"O(N*log*N)\",\n        average: \"O(N*log*N)\",\n        worst: \"O(N^2)\",\n        space: \"O(log*N)\"\n    });\n\n    //Effects\n    useEffect(() => {\n        let tempArr = randomArrGenerator(120, 250);\n        setData(tempArr);\n    }, [])\n\n    //Tools\n    const sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n\n    const swap = async (arr, index1, index2) => {\n        let temp = arr[index1];\n        arr[index1] = arr[index2];\n        arr[index2] = temp;\n    }\n\n    const pivot = async(arr, start=0, end=arr.length-1) => {\n        let swapIndex = start;\n        let pivot = arr[start];\n        for(let i = start+1; i <= end; i++){\n            if(arr[i] < pivot){\n                swapIndex++;\n                swap(arr, swapIndex, i);\n                await sleep(50);\n                setData(arr);\n            }\n        }\n        swap(arr, start, swapIndex);\n        await sleep(50);\n        setData(arr);\n        return swapIndex;\n    }\n\n    const sortHandler = async (arr, left=0, right=arr.length-1) => {\n        if(left < right){\n            let pivotIndex = await pivot(arr, left, right);\n            await sortHandler(arr, left, pivotIndex-1);\n            await sortHandler(arr, pivotIndex+1, right);\n        }\n        return arr;\n    }\n\n    return (\n        <MainContainer\n        title=\"Quick Sort\"\n        implementation={implementation}\n        complexity={complexity}\n        sortHandler={() => sortHandler(tempData)}>\n            <VisualizerP5\n                data={data}\n            />\n       </MainContainer>\n    )\n}\n\nexport default QuickSort;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport BubbleSort from \"./components/bubbleSort/bubbleSort\";\nimport SelectionSort from \"./components/selectionSort/selectionSort\";\nimport InsertionSort from \"./components/insertionSort/insertionSort\";\nimport QuickSort from \"./components/quickSort/quickSort\";\n\nfunction App() {\n\n  //State\n  const [message, setMessage] = useState(\"\");\n\n  //Effects\n  useEffect(() => {\n    fetch(\"/api/message/\")\n    .then((res) => {\n      console.log(res);\n      return res.json();\n    })\n    .then((parsedRes) => {\n      console.log(parsedRes)\n      setMessage(parsedRes.message);\n    })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h1>{message}</h1>\n      <div className=\"container\">\n        <BubbleSort/>\n        <SelectionSort/>\n        <InsertionSort/>\n        <QuickSort/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}